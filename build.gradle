buildscript {
    repositories {
        maven {
            allowInsecureProtocol = true
            url = "http://maven.aliyun.com/nexus/content/groups/public"
        }
        maven {
            url = "https://maven.aliyun.com/repository/jcenter"
        }
    }
    dependencies {
        classpath libs.spotless.plugin
        classpath libs.nebula.ospackage.plugin
    }
}

plugins {
    alias libs.plugins.spotless
    alias libs.plugins.nebula.ospackage
}

subprojects {

    apply plugin: "java"
    apply plugin: "java-library"

    group = "org.example.alvin"
    version = "1.0.0"

    repositories {
        maven {
            allowInsecureProtocol = true
            url = "http://maven.aliyun.com/nexus/content/groups/public"
        }
        maven {
            url = "https://maven.aliyun.com/repository/jcenter"
        }
    }

    configurations.configureEach {
        exclude group: "ch.qos.logback"
        exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
    }

    dependencies {
        // lombok
        annotationProcessor libs.lombok
        compileOnly libs.lombok
        testAnnotationProcessor libs.lombok
        testCompileOnly libs.lombok

        // logging
        implementation libs.slf4j.api
        implementation libs.log4j.core
        implementation libs.log4j.slf4j.impl

        // test
        testImplementation libs.junit.jupiter.api
        testRuntimeOnly libs.junit.jupiter.engine
        testImplementation libs.junit.jupiter.params
    }

    test {
        useJUnitPlatform()
    }

    project.compileJava.dependsOn spotlessApply

    tasks.withType(Jar).configureEach {
        archiveFileName = project.name + '.jar'
    }

    def copySubJar = tasks.register('copySubJar', Copy) {
        from(project.layout.buildDirectory.dir('libs'))
        include('**/*.jar')
        into(rootProject.layout.buildDirectory.dir("libs/${project.name}"))
    }

    def copySubScripts = tasks.register('copySubScripts', Copy) {
        from(project.layout.projectDirectory.dir('scripts'))
        include('**/*.*')
        into(rootProject.layout.buildDirectory.dir("libs/${project.name}"))
    }

    tasks.build.finalizedBy copySubJar
    tasks.copySubJar.finalizedBy copySubScripts
}

ospackage {
    packageName = project.name
    version = '1.0.0'
    release = '1'
    arch = 'x86_64'
    os = 'LINUX'
}

buildRpm {
    from(project.layout.buildDirectory.dir('libs')) {
        include('**/*.*')
        into('/usr/local/' + project.name)
        fileMode = 0755
    }
}