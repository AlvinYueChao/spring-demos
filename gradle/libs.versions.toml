[versions]
javax-annotation-api = "1.3.2"
commons-lang3 = "3.12.0"
lombok = "1.18.24"
spring-framework = "5.3.25"
spring-boot = "2.7.7"
spring-cloud = "2021.0.5"
spring-cloud-alibaba = "2021.0.4.0"
jupiter = "5.9.0"
slf4j = "1.7.30"
log4j = "2.18.0"
mybatis-spring = "2.0.7"
mybatis = "3.5.10"
alibaba-druid = "1.2.11"
mysql-connector-java = "8.0.31"
c3p0 = "0.9.5.5"
spotless-plugin = "6.11.0"
apache-dubbo = "3.0.8"
hibernate-validator = "6.0.0.Final"
javax-el = "3.0.0"
tomcat-embed = "9.0.65"
reactor-netty-http = "1.0.21"
rpm-plugin = "9.1.1"

[libraries]
# bom
spring-framework-bom = { module = "org.springframework:spring-framework-bom", version.ref = "spring-framework" }

# utils
javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation-api" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator" }
javax-el = { module = "org.glassfish:javax.el", version.ref = "javax-el" }
tomcat-embed-core = { module = "org.apache.tomcat.embed:tomcat-embed-core", version.ref = "tomcat-embed" }
tomcat-embed-el = { module = "org.apache.tomcat.embed:tomcat-embed-el", version.ref = "tomcat-embed" }
tomcat-embed-websocket = { module = "org.apache.tomcat.embed:tomcat-embed-websocket", version.ref = "tomcat-embed" }
reactor-netty-http = { module = "io.projectreactor.netty:reactor-netty-http", version.ref = "reactor-netty-http" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }

# spring-framework
spring-context = { module = "org.springframework:spring-context", version.ref = "spring-framework" }
spring-aspects = { module = "org.springframework:spring-aspects", version.ref = "spring-framework" }
spring-tx = { module = "org.springframework:spring-tx", version.ref = "spring-framework" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring-framework" }
spring-webflux = { module = "org.springframework:spring-webflux", version.ref = "spring-framework" }
spring-test = { module = "org.springframework:spring-test", version.ref = "spring-framework" }
spring-aop = { module = "org.springframework:spring-aop", version.ref = "spring-framework" }
spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "spring-framework" }
spring-security-oauth2-authorization-server = { module = "org.springframework.security:spring-security-oauth2-authorization-server", version = "0.4.0" }
spring-security-oauth2-resource-server = { module = "org.springframework.security:spring-security-oauth2-resource-server", version = "5.8.0" }

# spring-boot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-boot-starter-data-redis-reactive = { module = "org.springframework.boot:spring-boot-starter-data-redis-reactive", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }

# spring-cloud
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }
spring-cloud-starter-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
spring-cloud-starter-consul-discovery = { module = "org.springframework.cloud:spring-cloud-starter-consul-discovery" }
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }
spring-cloud-starter-zipkin = { module = "org.springframework.cloud:spring-cloud-starter-zipkin", version = "2.2.8.RELEASE" }
spring-cloud-config-server = { module = "org.springframework.cloud:spring-cloud-config-server", version = "3.1.5" }
spring-cloud-starter-config = { module = "org.springframework.cloud:spring-cloud-starter-config", version = "3.1.5" }
spring-cloud-starter-bootstrap = { module = "org.springframework.cloud:spring-cloud-starter-bootstrap", version = "3.1.5" }
spring-cloud-security = { module = "org.springframework.cloud:spring-cloud-security", version = "2.2.5.RELEASE" }
spring-cloud-starter-oauth2 = { module = "org.springframework.cloud:spring-cloud-starter-oauth2", version = "2.2.5.RELEASE" }

# spring-cloud-alibaba
spring-cloud-starter-alibaba-sentinel = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel", version.ref = "spring-cloud-alibaba" }
spring-cloud-starter-alibaba-nacos-discovery = { module = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery", version.ref = "spring-cloud-alibaba" }

# dubbo
apache-dubbo = { module = "org.apache.dubbo:dubbo", version.ref = "apache-dubbo" }
apache-dubbo-dependencies-zookeeper = { module = "org.apache.dubbo:dubbo-dependencies-zookeeper", version.ref = "apache-dubbo" }

# logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
log4j-slf4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }

# lombok
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# jdbc
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql-connector-java" }
mchange-c3p0 = { module = "com.mchange:c3p0", version.ref = "c3p0" }
mybatis = { module = "org.mybatis:mybatis", version.ref = "mybatis" }
mybatis-spring = { module = "org.mybatis:mybatis-spring", version.ref = "mybatis-spring" }
alibaba-druid = { module = "com.alibaba:druid", version.ref = "alibaba-druid" }

# plugin
spotless-plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless-plugin" }
nebula-ospackage-plugin = { module = "nebula.ospackage:nebula.ospackage.gradle.plugin", version.ref = "rpm-plugin" }

# test
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }

[bundles]
tomcat-embed = ["tomcat-embed-core", "tomcat-embed-el", "tomcat-embed-websocket"]

[plugins]
spotless = { id = "com.diffplug.spotless", version.ref = "spotless-plugin" }
nebula-ospackage = { id = "nebula.ospackage", version.ref = "rpm-plugin" }